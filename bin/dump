#!/usr/bin/env bash

HELP="Script create or restore a database dump.

  $(basename "$0") <action> <file|name>

    <action>          script execution action
      -c, --create    creating a database dump
      -r, --restore   restoring a database dump
      -h, --help      display this help
    <file|name>       name or file path to dumpfile"

if [ "$1" = -h ] || [ "$1" = --help ]; then
  echo "$HELP" && exit
fi

BASE_DIR="$(readlink --canonicalize "$(dirname "$0")/../")"
if source "${BASE_DIR}/.env" && source "${BASE_DIR}/docker/image/db/.env"; then
  if [ -z "$2" ]; then
    printf "error: Required parameter(s) are not specified\n%s\n" "$HELP" && exit 1
  fi

  if [ "${2:0:1}" != / ]; then
    DUMP_FILE="$(readlink --canonicalize "$(pwd)/${2%.sql.gz}").sql.gz"
  else
    DUMP_FILE="$(readlink --canonicalize "${2%.sql.gz}").sql.gz"
  fi

  case "$1" in
    -c|--create)
      docker exec "${COMPOSE_PROJECT_NAME}-db" sh -c \
        "exec mysqldump -u'${MYSQL_USER}' -p'${MYSQL_PASSWORD}' \
        --single-transaction --quick --lock-tables --add-drop-table '${MYSQL_DATABASE}' | gzip -9" > "$DUMP_FILE"
    ;;
    -r|--restore)
      docker exec -i "${COMPOSE_PROJECT_NAME}-db" sh -c \
        "exec gunzip -c | mysql -u'${MYSQL_USER}' -p'${MYSQL_PASSWORD}' '${MYSQL_DATABASE}'" < "$DUMP_FILE"
    ;;
    *)
      printf "error: Required parameter(s) are not specified\n%s\n" "$HELP" && exit 1
    ;;
  esac
fi
